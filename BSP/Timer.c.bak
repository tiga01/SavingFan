#include "Timer.h"

void TIM2_NVIC_Configuration(void)			//需要设置2个：优先级的分组；中断控制的4个参数
{
    NVIC_InitTypeDef NVIC_InitStructure;
    
    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);	//4x4=16，
    
    NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;	//TIM2_IRQHandler
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 1;
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
    
    NVIC_Init(&NVIC_InitStructure);		//中断控制的4个参数生效
}

void Timer_Init(void)
{
    TIM_TimeBaseInitTypeDef TIM_TimeBaseStructure;		//设置TIM的周期；确定计数方向
    
    RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);		//
    
    TIM_TimeBaseStructure.TIM_Period = (36000-1);	//重装值ARR=36000-1
    TIM_TimeBaseStructure.TIM_Prescaler = (2000-1);	//预分频值PSC=1999
    TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;		//
    TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;		//
	
    TIM_TimeBaseInit(TIM2,&TIM_TimeBaseStructure);		//4个参数生效
    
    TIM_ClearFlag(TIM2,TIM_FLAG_Update);	//更新(溢出)标志 = ‘0’
    TIM_ITConfig(TIM2,TIM_IT_Update,ENABLE);		//设置中断源的触发条件 = TIM_IT_Update =  ‘1’
    TIM_Cmd(TIM2,ENABLE);		//
}
